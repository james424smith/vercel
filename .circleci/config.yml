version: 2
jobs:

  install:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    environment:
      GOPATH: $HOME/go
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "yarn.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run:
          name: Updating apt packages
          command: sudo apt-get update
      - run:
          name: Installing the latest version of Go
          command: sudo apt-get install golang-go
      - run:
          name: Installing Dependencies
          command: yarn install
      - save_cache:
          paths:
            - node_modules
            - packages/now-build-utils/node_modules
            - packages/now-cgi/node_modules
            - packages/now-cli/node_modules
            - packages/now-client/node_modules
            - packages/now-go/node_modules
            - packages/now-next/node_modules
            - packages/now-node/node_modules
            - packages/now-node-bridge/node_modules
            - packages/now-python/node_modules
            - packages/now-routing-utils/node_modules
            - packages/now-ruby/node_modules
            - packages/now-static-build/node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - packages/now-build-utils/node_modules
            - packages/now-cgi/node_modules
            - packages/now-cli/node_modules
            - packages/now-client/node_modules
            - packages/now-go/node_modules
            - packages/now-next/node_modules
            - packages/now-node/node_modules
            - packages/now-node-bridge/node_modules
            - packages/now-python/node_modules
            - packages/now-routing-utils/node_modules
            - packages/now-ruby/node_modules
            - packages/now-static-build/node_modules

  build:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Installing apt dependencies
          command: sudo apt install -y rsync
      - attach_workspace:
          at: .
      - run:
          name: Building
          command: yarn build
      - store_artifacts:
          path: packages/now-cli/dist
      - persist_to_workspace:
          root: .
          paths:
            - packages/now-build-utils/dist
            - packages/now-cgi/dist
            - packages/now-cli/dist
            - packages/now-cli/assets
            - packages/now-client/dist
            - packages/now-go/dist
            - packages/now-next/dist
            - packages/now-node/dist
            - packages/now-node/test/fixtures/15-helpers/ts/types.d.ts
            - packages/now-node/test/fixtures/11-symlinks/symlink
            - packages/now-node-bridge/index.js
            - packages/now-node-bridge/bridge.js
            - packages/now-python/dist
            - packages/now-routing-utils/dist
            - packages/now-ruby/dist
            - packages/now-static-build/dist

  test-lint:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compiling `now dev` HTML error templates
          command: node packages/now-cli/scripts/compile-templates.js
      - run:
          name: Linting Code
          command: yarn test-lint

  test-unit:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Compiling `now dev` HTML error templates
          command: node packages/now-cli/scripts/compile-templates.js
      - run:
          name: Running Unit Tests
          command: yarn test-unit --clean false
      - persist_to_workspace:
          root: .
          paths:
            - packages/now-cli/.nyc_output

  test-integration-macos-node-8:
    macos:
      xcode: '9.2.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Update Node.js
          command: curl -sfLS install-node.now.sh/8.11 | sh -s -- --yes
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-macos-node-10:
    macos:
      xcode: '10.0.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-macos-node-12:
    macos:
      xcode: '10.3.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-linux-node-8:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-linux-node-10:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-linux-node-12:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests
          command: yarn test-integration --clean false

  test-integration-macos-now-dev-node-8:
    macos:
      xcode: '9.2.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Update Node.js
          command: curl -sfLS install-node.now.sh/8.11 | sh -s -- --yes
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.56.0/hugo_0.56.0_macOS-64bit.tar.gz && tar -xzf hugo_0.56.0_macOS-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-macos-now-dev-node-10:
    macos:
      xcode: '10.0.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.56.0/hugo_0.56.0_macOS-64bit.tar.gz && tar -xzf hugo_0.56.0_macOS-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-macos-now-dev-node-12:
    macos:
      xcode: '10.3.0'
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.56.0/hugo_0.56.0_macOS-64bit.tar.gz && tar -xzf hugo_0.56.0_macOS-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-linux-now-dev-node-8:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.55.6/hugo_0.55.6_Linux-64bit.tar.gz && tar -xzf hugo_0.55.6_Linux-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-linux-now-dev-node-10:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.55.6/hugo_0.55.6_Linux-64bit.tar.gz && tar -xzf hugo_0.55.6_Linux-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-linux-now-dev-node-12:
    docker:
      - image: circleci/node:12
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Downloading Hugo
          command: curl -L -O https://github.com/gohugoio/hugo/releases/download/v0.55.6/hugo_0.55.6_Linux-64bit.tar.gz && tar -xzf hugo_0.55.6_Linux-64bit.tar.gz && mv ./hugo packages/now-cli/test/dev/fixtures/08-hugo/
      - run:
          name: Running Integration Tests for `now dev`
          command: yarn test-integration-now-dev --clean false

  test-integration-once:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Output version
          command: node --version
      - run:
          name: Running Integration Tests Once
          command: yarn test-integration-once --clean false

  coverage:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Run coverage report
          command: yarn workspace now run coverage

  source-maps:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Installing Sentry CLI
          command: npm install -g @sentry/cli
      - run:
          name: Creating a New Sentry Release
          command: sentry-cli releases new now-cli@`git describe --tags`
      - run:
          name: Upload Sourcemap Files
          command: sentry-cli releases files now-cli@`git describe --tags` upload-sourcemaps ./dist
      - run:
          name: Finalize Sentry Release
          command: sentry-cli releases finalize now-cli@`git describe --tags`

  publish-stable:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Saving Authentication Information
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publishing to Stable Channel
          command: npm publish --tag latest

  publish-canary:
    docker:
      - image: circleci/node:10
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Saving Authentication Information
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - run:
          name: Publishing to Canary Channel
          command: npm publish --tag canary

workflows:
  version: 2
  unscheduled:
    jobs:
      - install:
          filters:
            tags:
              only: /.*/
      - build:
          requires:
            - install
          filters:
            tags:
              only: /.*/
      - test-lint:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-unit:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-node-8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-node-10:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-node-12:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-node-8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-node-10:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-node-12:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-now-dev-node-8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-now-dev-node-10:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-macos-now-dev-node-12:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-now-dev-node-8:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-now-dev-node-10:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-linux-now-dev-node-12:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - test-integration-once:
          requires:
            - build
          filters:
            tags:
              only: /.*/
      - coverage:
          requires:
            - test-unit
            - test-integration-macos-node-8
            - test-integration-macos-node-10
            - test-integration-macos-node-12
            - test-integration-linux-node-8
            - test-integration-linux-node-10
            - test-integration-linux-node-12
            - test-integration-macos-now-dev-node-8
            - test-integration-macos-now-dev-node-10
            - test-integration-macos-now-dev-node-12
            - test-integration-linux-now-dev-node-8
            - test-integration-linux-now-dev-node-10
            - test-integration-linux-now-dev-node-12
            - test-integration-once
            - test-lint
          filters:
            tags:
              only: /.*/
      - publish-canary:
          requires:
            - coverage
          filters:
            tags:
              only: /^.*canary.*($|\b)/
            branches:
              ignore: /.*/
      - publish-stable:
          requires:
            - coverage
          filters:
            tags:
              only: /^(\d+\.)?(\d+\.)?(\*|\d+)$/
            branches:
              ignore: /.*/
